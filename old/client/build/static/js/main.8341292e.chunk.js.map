{"version":3,"sources":["redux/reducers/fetchDataReducer.js","redux/reducers/contactFormReducer.js","redux/reducers/uiReducer.js","redux/reducers/index.js","redux/actions/types.js","redux/store/index.js","redux/actions/contactFormActions.js","redux/actions/fetchDataActions.js","redux/actions/uiActions.js","redux/actions/index.js","components/header.js","components/landing.js","components/aboutme.js","components/experience-item.js","components/loading.js","components/experience.js","components/contact-me-form.js","components/footer.js","components/portfolio-item.js","components/portfolio.js","components/App.js","serviceWorker.js","index.js","assets/images/HeaderBackground2.jpg","assets/images/profilePhoto.jpg"],"names":["INITIAL_STATE","education","experience","projects","emailName","emailNameValidate","emailCompany","emailCompanyValidate","emailAddress","emailAddressValidate","emailMessage","emailMessageValidate","messageSuccess","messageSuccessSend","showNavigation","offset","duration","reducers","combineReducers","contactFormReducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","fetchDataReducer","uiReducer","composeEnhancers","composeWithDevTools","middlewares","thunk","store","createStore","applyMiddleware","apply","clearContactForm","dispatch","updateMessageStatus","value","msg","contactFormActions","updateNameInput","getState","updateEmailInput","validator","isEmail","updateCompanyNameInput","updateMessageInput","submitContactForm","e","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","_getState$contactForm","contactInfo","wrap","_context","prev","next","preventDefault","name","company","email","description","axios","post","setTimeout","t0","stop","_x","_x2","this","fetchDataActions","fetchEducation","fetchExperience","get","then","res","experienceData","data","catch","err","console","log","fetchPortfolio","error","uiActions","toggleNavigation","actions","Header","styleClasses","react_default","createElement","className","role","modules","to","spy","smooth","style","backgroundImage","concat","landingImage","backgroundAttachment","backgroundSize","height","zIndex","opacity","Landing","activeClass","AboutMe","props","src","profilePhoto","alt","href","target","rel","ExperienceItems","dist_es6","iconStyle","background","employer","title","location","dates","responsibilities","map","responsibility","index","key","LoadingComponent","connect","_ref2","experienceList","experience_item","layout","loading","mapDispatchToProps","ACTIONS","validateInputFunction","stateValue","text","Fragment","color","htmlFor","id","onChange","rows","renderSuccessMessage","onClick","disabled","renderSendButton","Footer","Date","getFullYear","PortfolioItem","react","liveLink","repoLink","overview","stack","technology","portfolioList","project","portfolio_item","useEffect","window","addEventListener","headerHeight","innerHeight","userWindow","pageYOffset","landing","header","aboutme","components_experience","portfolio","contact_me_form","footer","Boolean","hostname","match","Root","es","components_App","ReactDOM","render","src_Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8341292e.chunk.js","sourcesContent":["import {\n  FETCH_EDUCATION,\n  FETCH_EXPERIENCE,\n  FETCH_PROJECTS\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  education: [],\n  experience: [],\n  projects: []\n};\n\nexport const fetchDataReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_EDUCATION:\n      return {\n        ...state,\n        education: action.payload\n      };\n    case FETCH_EXPERIENCE:\n      return {\n        ...state,\n        experience: action.payload\n      };\n\n    case FETCH_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n\n    default:\n      return {\n        ...state\n      };\n  }\n};\n","import {\n  CLEAR_CONTACT_FORM,\n  UPDATE_COMPANY_NAME,\n  UPDATE_EMAIL_ADDRESS,\n  UPDATE_EMAIL_MESSAGE,\n  UPDATE_MESSAGE_STATUS,\n  UPDATE_NAME\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  emailName: \"\",\n  emailNameValidate: null,\n  emailCompany: \"\",\n  emailCompanyValidate: null,\n  emailAddress: \"\",\n  emailAddressValidate: null,\n  emailMessage: \"\",\n  emailMessageValidate: null,\n  messageSuccess: null,\n  messageSuccessSend: null\n};\n\nexport const contactFormReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UPDATE_NAME:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case UPDATE_COMPANY_NAME:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case UPDATE_EMAIL_ADDRESS:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case UPDATE_EMAIL_MESSAGE:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case CLEAR_CONTACT_FORM:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case UPDATE_MESSAGE_STATUS:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { TOGGLE_NAVIGATION } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  showNavigation: false,\n  offset: -50,\n  duration: 500\n};\n\nexport const uiReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TOGGLE_NAVIGATION:\n      return {\n        ...state,\n        showNavigation: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { fetchDataReducer } from \"./fetchDataReducer\";\nimport { contactFormReducer } from \"./contactFormReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\nconst reducers = combineReducers({\n  contactFormReducer,\n  fetchDataReducer,\n  uiReducer\n});\n\nexport default reducers;\n","// Fetch Data Actions\nexport const FETCH_EDUCATION = \"FETCH_EDUCATION\";\nexport const FETCH_EXPERIENCE = \"FETCH_EXPERIENCE\";\nexport const FETCH_PROJECTS = \"FETCH_PROJECTS\";\n//UI Content Actions\nexport const TOGGLE_NAVIGATION = \"TOGGLE_NAVIAGTION\";\n// Contact Form Actions\nexport const CLEAR_CONTACT_FORM = \"CLEAR_CONTACT_FORM\";\nexport const EMAIL_SENT_SUCCESS = \"EMAIL_SENT_SUCCESS\";\nexport const EMAIL_SENT_FAILURE = \"EMAIL_SENT_FAILURE\";\nexport const UPDATE_COMPANY_NAME = \"UPDATE_COMPANY_NAME\";\nexport const UPDATE_EMAIL_ADDRESS = \"UPDATE_EMAIL_ADDRESS\";\nexport const UPDATE_EMAIL_MESSAGE = \"UPDATE_EMAIL_MESSAGE\";\nexport const UPDATE_NAME = \"UPDATE_NAME\";\nexport const UPDATE_MESSAGE_STATUS = \"UPDATE_MESSAGE_STATUS\";\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducers from \"../reducers\";\n\nconst composeEnhancers = composeWithDevTools({});\n\nconst middlewares = [thunk];\n\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n\nexport default store;\n","import {\n  CLEAR_CONTACT_FORM,\n  UPDATE_COMPANY_NAME,\n  UPDATE_EMAIL_ADDRESS,\n  UPDATE_EMAIL_MESSAGE,\n  UPDATE_MESSAGE_STATUS,\n  UPDATE_NAME\n} from \"./types\";\nimport axios from \"axios\";\nimport validator from \"validator\";\n\n// CONTACT ME FORM\nconst updateNameInput = value => (dispatch, getState) => {\n  if (value.length > 3) {\n    dispatch({\n      type: UPDATE_NAME,\n      payload: {\n        emailName: value,\n        emailNameValidate: true\n      }\n    });\n  } else {\n    dispatch({\n      type: UPDATE_NAME,\n      payload: {\n        emailName: value,\n        emailNameValidate: false\n      }\n    });\n  }\n};\n\nconst updateEmailInput = value => dispatch => {\n  if (validator.isEmail(value)) {\n    dispatch({\n      type: UPDATE_EMAIL_ADDRESS,\n      payload: {\n        emailAddress: value,\n        emailAddressValidate: true\n      }\n    });\n  } else {\n    dispatch({\n      type: UPDATE_EMAIL_ADDRESS,\n      payload: {\n        emailAddress: value,\n        emailAddressValidate: false\n      }\n    });\n  }\n};\n\nconst updateCompanyNameInput = value => dispatch => {\n  if (value.length > 3) {\n    dispatch({\n      type: UPDATE_COMPANY_NAME,\n      payload: {\n        emailCompany: value,\n        emailCompanyValidate: true\n      }\n    });\n  } else {\n    dispatch({\n      type: UPDATE_COMPANY_NAME,\n      payload: {\n        emailCompany: value,\n        emailCompanyValidate: false\n      }\n    });\n  }\n};\n\nconst updateMessageInput = value => dispatch => {\n  if (value.length > 3) {\n    dispatch({\n      type: UPDATE_EMAIL_MESSAGE,\n      payload: {\n        emailMessage: value,\n        emailMessageValidate: true\n      }\n    });\n  } else {\n    dispatch({\n      type: UPDATE_EMAIL_MESSAGE,\n      payload: {\n        emailMessage: value,\n        emailMessageValidate: false\n      }\n    });\n  }\n};\n\nconst clearContactForm = () => dispatch => {\n  let value = {\n    emailName: \"\",\n    emailNameValidate: null,\n    emailCompany: \"\",\n    emailCompanyValidate: null,\n    emailAddress: \"\",\n    emailAddressValidate: null,\n    emailMessage: \"\",\n    emailMessageValidate: null,\n    messageSuccess: null,\n    messageSuccessSend: null\n  };\n\n  dispatch({\n    type: CLEAR_CONTACT_FORM,\n    payload: value\n  });\n};\n\nconst updateMessageStatus = (value, msg) => dispatch => {\n  dispatch({\n    type: UPDATE_MESSAGE_STATUS,\n    payload: {\n      messageSuccess: value,\n      messageSuccessSend: msg\n    }\n  });\n};\n\nconst submitContactForm = e => async (dispatch, getState) => {\n  e.preventDefault();\n\n  let {\n    emailName,\n    emailNameValidate,\n    emailCompany,\n    emailCompanyValidate,\n    emailAddress,\n    emailAddressValidate,\n    emailMessage,\n    emailMessageValidate\n  } = getState().contactFormReducer;\n\n  let contactInfo = {\n    name: emailName,\n    company: emailCompany,\n    email: emailAddress,\n    description: emailMessage\n  };\n\n  // Setting condition for email to be sent off\n  let formFilled =\n    emailNameValidate &&\n    emailCompanyValidate &&\n    emailAddressValidate &&\n    emailMessageValidate\n      ? true\n      : false;\n\n  if (formFilled) {\n    try {\n      await axios.post(\"/api/contact-me\", contactInfo);\n      dispatch(\n        updateMessageStatus(\n          true,\n          `Message sent, I'll be in touch with you soon!`\n        )\n      );\n      setTimeout(() => {\n        dispatch(clearContactForm());\n      }, 2000);\n    } catch (err) {\n      dispatch(\n        updateMessageStatus(\n          false,\n          \"Unable to send contact form. Last request was within an hour. Try again later\"\n        )\n      );\n      setTimeout(() => {\n        dispatch(clearContactForm());\n      }, 2000);\n    }\n  }\n};\n\nexport default {\n  updateNameInput,\n  updateEmailInput,\n  updateCompanyNameInput,\n  updateMessageInput,\n  clearContactForm,\n  updateMessageStatus,\n  submitContactForm\n};\n","import { FETCH_PROJECTS, FETCH_EDUCATION, FETCH_EXPERIENCE } from \"./types\";\nimport axios from \"axios\";\n\nconst fetchEducation = () => dispatch => {\n  dispatch({\n    type: FETCH_EDUCATION,\n    payload: []\n  });\n};\n\nconst fetchExperience = () => dispatch => {\n  axios\n    .get(\"/api/data/experienceList\")\n    .then(res => {\n      const experienceData = res.data;\n      dispatch({\n        type: FETCH_EXPERIENCE,\n        payload: experienceData\n      });\n    })\n    .catch(err => console.log(err));\n};\n\nconst fetchPortfolio = () => dispatch => {\n  axios\n    .get(\"/api/data/projectList\")\n    .then(res => {\n      let projects = res.data;\n      dispatch({\n        type: FETCH_PROJECTS,\n        payload: projects\n      });\n    })\n    .catch(err => console.error(err));\n};\n\nexport default {\n  fetchEducation,\n  fetchExperience,\n  fetchPortfolio\n};\n","import { TOGGLE_NAVIGATION } from \"./types\";\n\nconst toggleNavigation = value => dispatch => {\n  dispatch({\n    type: TOGGLE_NAVIGATION,\n    payload: value\n  });\n};\n\nexport default {\n  toggleNavigation\n};\n","import contactFormActions from \"./contactFormActions\";\nimport fetchDataActions from \"./fetchDataActions\";\nimport uiActions from \"./uiActions\";\n\nexport default {\n  ...contactFormActions,\n  ...fetchDataActions,\n  ...uiActions\n};\n","import React from \"react\";\nimport { Link } from \"react-scroll\";\n\n// setting duration for the scroll speed\nconst Header = ({ duration, offset, showNavigation }) => {\n  let styleClasses = showNavigation\n    ? \"navbar navbar-dark bg-primary\"\n    : \"hidden\";\n  return (\n    <nav className={styleClasses} role=\"navigation\">\n      <ul className=\"navbar__desktop\">\n        <li>\n          <Link\n            to=\"AboutMe\"\n            spy={true}\n            smooth={true}\n            offset={offset}\n            duration={duration}\n          >\n            <p>About Me</p>\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"Experience\"\n            spy={true}\n            smooth={true}\n            offset={offset}\n            duration={duration}\n          >\n            <p>Experience</p>\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"Portfolio\"\n            spy={true}\n            smooth={true}\n            offset={offset}\n            duration={duration}\n          >\n            <p>Portfolio</p>\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"ContactMe\"\n            spy={true}\n            smooth={true}\n            offset={offset}\n            duration={duration}\n          >\n            <p>Contact-Me</p>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-scroll\";\nimport landingImage from \"../assets/images/HeaderBackground2.jpg\";\n\nconst style = {\n  backgroundImage: `url(${landingImage})`,\n  backgroundAttachment: \"fixed\",\n  backgroundSize: \"cover\",\n  height: \"100vh\",\n  zIndex: 3,\n  opacity: 0.9\n};\n\nconst offset = -50;\n\nconst Landing = () => {\n  return (\n    <div className=\"landing\">\n      <div style={style}>\n        <div className=\"landing-content\">\n          <h1 className=\"landing-title\">Welcome</h1>\n          <div className=\"landing-container-bar\"></div>\n          <p className=\"landing-subtitle landing-subtitle--animated\">\n            <Link\n              activeClass=\"active\"\n              to=\"AboutMe\"\n              spy={true}\n              smooth={true}\n              offset={offset}\n              duration={500}\n            >\n              Let's Collaborate\n            </Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Landing;\n","import React from \"react\";\nimport { Link } from \"react-scroll\";\nimport profilePhoto from \"../assets/images/profilePhoto.jpg\";\n\nconst AboutMe = props => {\n  const duration = props.duration;\n  const offset = props.offset;\n  return (\n    <div className=\"about-me\">\n      <div className=\"row mb-3\">\n        <div className=\"section__title first col-12\">\n          <h2>\n            About Me <span className=\"emphasize\">/</span>\n          </h2>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"about-me__photo--container col-md-6 col-sm-12\">\n          <img className=\"about-me__image\" src={profilePhoto} alt=\"\" />\n          <div className=\"about-me__triangle\"></div>\n        </div>\n        <div className=\"about-me__description col-md-6 col-sm-12\">\n          <div className=\"about-me__container\">\n            <p>\n              I’m a Full-Stack Web Developer based in Toronto, Ontario, Canada.\n              Creating the best possible product is my goal as a developer; and\n              with that in mind, my objective is to help{\" \"}\n              <span className=\"emphasize\">YOU</span> create the best product\n              possible for any and all of{\" \"}\n              <span className=\"emphasize\">YOUR</span> needs! <br /> When it\n              comes to your needs, deadlines and working hours are pliable as\n              needed. I’m also flexible when it comes to working arrangements\n              whether its solo or in a working group environment.\n            </p>\n            <div className=\"contact-container mt-5\">\n              <div className=\"row\">\n                <div className=\"col-4 mb-3\">\n                  <a\n                    href=\"https://www.linkedin.com/in/adrian-pearman/\"\n                    target=\"_blank\"\n                    alt=\"Link to Adrian Pearman's professional LinkedIn profile\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <button className=\"contact__me contact__me--linkedin\">\n                      Linkedin\n                    </button>\n                  </a>\n                </div>\n                <div className=\"col-4 mb-3\">\n                  <a\n                    href=\"https://github.com/adrianpearman\"\n                    target=\"_blank\"\n                    alt=\"Link to Adrian Pearman's Github profile\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <button className=\"contact__me contact__me--github\">\n                      Github\n                    </button>\n                  </a>\n                </div>\n                <div className=\"col-4 mb-3\">\n                  <Link\n                    to=\"ContactMe\"\n                    spy={true}\n                    smooth={true}\n                    offset={offset}\n                    duration={duration}\n                  >\n                    <button className=\"contact__me contact__me--email\">\n                      E-Mail\n                    </button>\n                  </Link>\n                </div>\n              </div>\n              <div className=\"contact-container-bar\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <hr />\n    </div>\n  );\n};\n\nexport default AboutMe;\n","import React from \"react\";\nimport { VerticalTimelineElement } from \"react-vertical-timeline-component\";\n\nconst ExperienceItems = props => {\n  return (\n    <VerticalTimelineElement\n      className=\"vertical-timeline-element--work experience-title\"\n      iconStyle={{ background: \"#2400b6\" }}\n    >\n      <h3 className=\"vertical-timeline-element-title mb-3 experience-title\">\n        <span className=\"emphasize-title\">Company:</span> {props.employer}\n      </h3>\n      <h3 className=\"vertical-timeline-element-title mb-3 experience-title\">\n        <span className=\"emphasize-title\">Title:</span> {props.title}\n      </h3>\n      <h3 className=\"vertical-timeline-element-subtitle mb-3 experience-title\">\n        <span className=\"emphasize-title\">Location:</span> {props.location}\n      </h3>\n      <h3 className=\"vertical-timeline-element-subtitle mb-3 experience-title\">\n        <span className=\"emphasize-title\">Dates:</span> {props.dates}\n      </h3>\n      <h3 className=\"experience-title experience-title-responsibility\">\n        <span className=\"emphasize-title\">Responsibilities:</span>\n      </h3>\n      <ul className=\"experience-list\">\n        {props.responsibilities.map((responsibility, index) => {\n          return <li key={index}>{responsibility}</li>;\n        })}\n      </ul>\n    </VerticalTimelineElement>\n  );\n};\n\nexport default ExperienceItems;\n","import React from \"react\";\n\nconst LoadingComponent = () => {\n  return (\n    <div className=\"center\">\n      <div className=\"sk-cube-grid\">\n        <div className=\"sk-cube sk-cube1\"></div>\n        <div className=\"sk-cube sk-cube2\"></div>\n        <div className=\"sk-cube sk-cube3\"></div>\n        <div className=\"sk-cube sk-cube4\"></div>\n        <div className=\"sk-cube sk-cube5\"></div>\n        <div className=\"sk-cube sk-cube6\"></div>\n        <div className=\"sk-cube sk-cube7\"></div>\n        <div className=\"sk-cube sk-cube8\"></div>\n        <div className=\"sk-cube sk-cube9\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingComponent;\n","// Modules\nimport React from \"react\";\nimport { VerticalTimeline } from \"react-vertical-timeline-component\";\nimport { connect } from \"react-redux\";\n// Components\nimport ExperienceItem from \"./experience-item\";\nimport LoadingComponent from \"./loading\";\n\nconst Experience = ({ experience }) => {\n  const experienceList = experience.map((experience, index) => {\n    return (\n      <ExperienceItem\n        key={index}\n        dates={experience.dates}\n        employer={experience.employer}\n        location={experience.location}\n        title={experience.title}\n        responsibilities={experience.responsibilities}\n      />\n    );\n  });\n\n  return (\n    <div className=\"experience\">\n      <div className=\"experience__title section__title\">\n        <h2>\n          Professional Experience <span className=\"emphasize\">/</span>\n        </h2>\n      </div>\n      <VerticalTimeline layout=\"1-column\">\n        {experience.length > 0 ? experienceList : <LoadingComponent />}\n      </VerticalTimeline>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ fetchDataReducer }) => {\n  const { experience } = fetchDataReducer;\n  return { experience };\n};\n\nexport default connect(mapStateToProps)(Experience);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport ACTIONS from \"../redux/actions\";\n\nconst ContactMeForm = props => {\n  const validateInputFunction = (stateValue, text) => {\n    if (stateValue === null) {\n      return <></>;\n    } else if (stateValue === false) {\n      return <div style={{ color: \"red\" }}>{text}</div>;\n    } else {\n      return <></>;\n    }\n  };\n\n  const validateContactForm = () => {\n    if (\n      props.emailName === \"\" ||\n      props.emailCompany === \"\" ||\n      props.emailAddress === \"\" ||\n      props.emailMessage === \"\"\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const renderSendButton = () => {\n    switch (props.messageSuccess) {\n      case true:\n        return (\n          <button\n            className=\"btn btn-success\"\n            onClick={e => props.submitContactForm(e)}\n          >\n            Sent\n          </button>\n        );\n      case false:\n        return (\n          <button\n            className=\"btn btn-danger\"\n            onClick={e => props.submitContactForm(e)}\n          >\n            Fail\n          </button>\n        );\n      default:\n        return (\n          <button\n            className=\"btn btn-primary\"\n            onClick={e => props.submitContactForm(e)}\n            disabled={validateContactForm()}\n          >\n            Send\n          </button>\n        );\n    }\n  };\n\n  const renderSuccessMessage = () => {\n    switch (props.messageSuccess) {\n      case true:\n        return (\n          <div className=\"alert alert-success\">\n            <strong>{props.messageSuccessSend}</strong>\n          </div>\n        );\n      case false:\n        return (\n          <div className=\"alert alert-danger\">\n            <strong>{props.messageSuccessSend}</strong>\n          </div>\n        );\n      default:\n        return <></>;\n    }\n  };\n\n  return (\n    <div className=\"contact-me\">\n      <div className=\"section__title\">\n        <h2>\n          Contact Me <span className=\"emphasize\">/</span>\n        </h2>\n      </div>\n      <div className=\"contact-me__form row mb-4\">\n        <div className=\"col-12\">\n          <p>\n            Thank you for taking the time to look at my portfolio\n            <span className=\"emphasize\">!</span>\n          </p>\n          <p>\n            Starting a new project<span className=\"emphasize\">?</span>\n          </p>\n          <p>\n            Exploring options for a current project\n            <span className=\"emphasize\">?</span>\n          </p>\n          <p>\n            Looking to add a new member to your team\n            <span className=\"emphasize\">?</span>\n          </p>\n          <p>\n            Contact me and lets collaborate<span className=\"emphasize\">!</span>\n          </p>\n          <br />\n          <p>\n            I look forward to hearing from you\n            <span className=\"emphasize\">!</span>\n          </p>\n        </div>\n      </div>\n      <form className=\"form-input\">\n        <fieldset>\n          <div className=\"form-group\">\n            <div className=\"input-container\">\n              <label htmlFor=\"emailName\">Name</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                id=\"emailName\"\n                onChange={e => props.updateNameInput(e.target.value)}\n                value={props.emailName}\n              />\n              {validateInputFunction(\n                props.emailNameValidate,\n                \"Please enter a name\"\n              )}\n            </div>\n            <div className=\"input-container\">\n              <label htmlFor=\"emailCompany\">Company Name</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                id=\"emailCompany\"\n                onChange={e => props.updateCompanyNameInput(e.target.value)}\n                value={props.emailCompany}\n              />\n              {validateInputFunction(\n                props.emailCompanyValidate,\n                \"Please enter a company name\"\n              )}\n            </div>\n            <div className=\"input-container\">\n              <label htmlFor=\"emailAddress\">Email Address</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                id=\"emailAddress\"\n                onChange={e => props.updateEmailInput(e.target.value)}\n                value={props.emailAddress}\n              />\n              {validateInputFunction(\n                props.emailAddressValidate,\n                \"Please enter a valid contact method\"\n              )}\n            </div>\n            <div className=\"input-container form-group\">\n              <label htmlFor=\"emailMessage\">Message</label>\n              <textarea\n                className=\"form-control\"\n                id=\"emailMessage\"\n                rows=\"3\"\n                onChange={e => props.updateMessageInput(e.target.value)}\n                value={props.emailMessage}\n              ></textarea>\n              {validateInputFunction(\n                props.emailMessageValidate,\n                \"Please enter a message\"\n              )}\n            </div>\n            {renderSuccessMessage()}\n            {renderSendButton()}\n          </div>\n        </fieldset>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ contactFormReducer }) => {\n  return contactFormReducer;\n};\n\nconst mapDispatchToProps = {\n  submitContactForm: ACTIONS.submitContactForm,\n  updateCompanyNameInput: ACTIONS.updateCompanyNameInput,\n  updateEmailInput: ACTIONS.updateEmailInput,\n  updateMessageInput: ACTIONS.updateMessageInput,\n  updateNameInput: ACTIONS.updateNameInput\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactMeForm);\n","import React from \"react\";\nimport { Link } from \"react-scroll\";\n\nconst Footer = ({ duration, offset }) => {\n  return (\n    <footer className=\"footer\">\n      <nav className=\"footer__nav\" role=\"\">\n        <ul>\n          <li className=\"linkedin\">\n            <a\n              href=\"https://www.linkedin.com/in/adrian-pearman/\"\n              target=\"_blank\"\n              alt=\"Link to Adrian Pearman's professional LinkedIn profile\"\n              rel=\"noopener noreferrer\"\n            >\n              LinkedIn\n            </a>\n          </li>\n          <li className=\"github\">\n            <a\n              href=\"https://github.com/adrianpearman\"\n              target=\"_blank\"\n              alt=\"Link to Adrian Pearman's Github profile\"\n              rel=\"noopener noreferrer\"\n            >\n              GitHub\n            </a>\n          </li>\n          <li>\n            <Link\n              to=\"AboutMe\"\n              spy={true}\n              smooth={true}\n              offset={offset}\n              duration={duration}\n            >\n              About Me\n            </Link>\n          </li>\n          <li>\n            <Link\n              to=\"Experience\"\n              spy={true}\n              smooth={true}\n              offset={offset}\n              duration={duration}\n            >\n              Experience\n            </Link>\n          </li>\n          <li>\n            <Link\n              to=\"Portfolio\"\n              spy={true}\n              smooth={true}\n              offset={offset}\n              duration={duration}\n            >\n              Portfolio\n            </Link>\n          </li>\n          <li>\n            <Link\n              to=\"ContactMe\"\n              spy={true}\n              smooth={true}\n              offset={offset}\n              duration={duration}\n            >\n              Contact-Me\n            </Link>\n          </li>\n        </ul>\n      </nav>\n      <h3 className=\"footer__copyright\">\n        &copy; Adrian Pearman {new Date().getFullYear()}\n      </h3>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { Fragment } from \"react\";\n\nconst PortfolioItem = props => {\n  return (\n    <div className=\"portfolio__item\">\n      <div className=\"card portfolio__item-card\">\n        <div className=\"card-body\">\n          <h3 className=\"card-title emphasize-title\">Project: {props.title}</h3>\n          <Fragment>\n            <div className=\"portfolio__item-link-container\">\n              <p className=\"col\">\n                <a\n                  href={props.liveLink}\n                  className=\"card-link\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Live Site\n                </a>\n              </p>\n              <p className=\"col\">\n                <a\n                  href={props.repoLink}\n                  className=\"card-link\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Repository\n                </a>\n              </p>\n            </div>\n            <h4>Project Overview:</h4>\n            <p className=\"card-text\">{props.overview}</p>\n            <h4>Technologies Used:</h4>\n            <ul className=\"technology-stack\">\n              {props.stack.map((technology, index) => {\n                return <li key={index}>{technology}</li>;\n              })}\n            </ul>\n          </Fragment>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PortfolioItem;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n// Components\nimport LoadingComponent from \"./loading\";\nimport PortfolioItem from \"./portfolio-item\";\n\nconst Portfolio = ({ projects }) => {\n  const portfolioList = projects.map((project, index) => {\n    return (\n      <PortfolioItem\n        key={index}\n        title={project.title}\n        overview={project.overview}\n        stack={project.stack}\n        liveLink={project.liveLink}\n        repoLink={project.repoLink}\n      />\n    );\n  });\n\n  return (\n    <div className=\"portfolio\">\n      <div className=\"row mb-3\">\n        <div className=\"section__title col\">\n          <h2>\n            Portfolio <span className=\"emphasize\">/</span>\n          </h2>\n        </div>\n      </div>\n      <div className=\"portfolio__container row\">\n        {projects.length > 0 ? portfolioList : <LoadingComponent />}\n      </div>\n      <hr />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ fetchDataReducer }) => {\n  const { projects } = fetchDataReducer;\n  return { projects };\n};\n\nexport default connect(mapStateToProps)(Portfolio);\n","// React Modules\nimport React, { useEffect } from \"react\";\nimport { Element } from \"react-scroll\";\n// Redux\nimport { connect } from \"react-redux\";\nimport ACTIONS from \"../redux/actions\";\n// Imported Components / Styling\nimport Header from \"./header\";\nimport Landing from \"./landing\";\nimport AboutMe from \"./aboutme\";\nimport Experience from \"./experience\";\nimport ContactMeForm from \"./contact-me-form\";\nimport Footer from \"./footer\";\nimport Portfolio from \"./portfolio\";\nimport \"../assets/styles/styles.scss\";\n\nconst App = ({\n  duration,\n  fetchExperience,\n  fetchPortfolio,\n  offset,\n  showNavigation,\n  toggleNavigation\n}) => {\n  useEffect(() => {\n    const onScroll = () => {\n      // records the height of where the setState will change\n      const headerHeight = window.innerHeight - 75;\n      // records current position on the page\n      let userWindow = window.pageYOffset;\n      // triggers function to change navigation bar\n      userWindow > headerHeight\n        ? toggleNavigation(true)\n        : toggleNavigation(false);\n    };\n    window.addEventListener(\"scroll\", onScroll);\n    fetchExperience();\n    fetchPortfolio();\n  }, []);\n\n  return (\n    <div>\n      <Landing />\n      <Header\n        showNavigation={showNavigation}\n        offset={offset}\n        duration={duration}\n      />\n      <div className=\"container\" role=\"main\">\n        <Element name=\"AboutMe\">\n          <AboutMe offset={offset} duration={duration} />\n        </Element>\n\n        <Element name=\"Experience\">\n          <Experience />\n        </Element>\n\n        <Element name=\"Portfolio\">\n          <Portfolio />\n        </Element>\n\n        <Element name=\"ContactMe\">\n          <ContactMeForm />\n        </Element>\n      </div>\n      <Footer offset={offset} duration={duration} />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ uiReducer }) => {\n  return uiReducer;\n};\n\nconst mapDispatchToProps = {\n  fetchEducation: ACTIONS.fetchEducation,\n  fetchExperience: ACTIONS.fetchExperience,\n  fetchPortfolio: ACTIONS.fetchPortfolio,\n  toggleNavigation: ACTIONS.toggleNavigation\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst Root = () => {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n};\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/HeaderBackground2.ac4ea8ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profilePhoto.e955bf0d.jpg\";"],"sourceRoot":""}